INFO  12:55:32,400 - Compiling source file: C:\pp1\workspace\MJCompiler\test\program.mj
INFO  12:55:32,436 - #2 program
INFO  12:55:32,436 - #45 mojProgram
INFO  12:55:32,436 - #4 class
INFO  12:55:32,436 - #45 Klasa
INFO  12:55:32,437 - #42 {
INFO  12:55:32,437 - #45 int
INFO  12:55:32,437 - #45 y
INFO  12:55:32,438 - #33 ;
INFO  12:55:32,438 - #42 {
INFO  12:55:32,439 - #45 int
INFO  12:55:32,439 - #45 fun
INFO  12:55:32,439 - #37 (
INFO  12:55:32,440 - #38 )
INFO  12:55:32,441 - #42 {
INFO  12:55:32,441 - #12 return
INFO  12:55:32,442 - #44 3
INFO  12:55:32,442 - #33 ;
INFO  12:55:32,442 - #43 }
INFO  12:55:32,442 - #43 }
INFO  12:55:32,442 - #43 }
INFO  12:55:32,443 - #4 class
INFO  12:55:32,444 - #45 Klasa
INFO  12:55:32,444 - #14 extends
INFO  12:55:32,444 - #45 Klasa
INFO  12:55:32,445 - #42 {
INFO  12:55:32,445 - #45 int
INFO  12:55:32,445 - #45 y
INFO  12:55:32,445 - #39 [
INFO  12:55:32,445 - #40 ]
INFO  12:55:32,445 - #39 [
INFO  12:55:32,445 - #40 ]
INFO  12:55:32,445 - #33 ;
INFO  12:55:32,445 - #45 char
INFO  12:55:32,445 - #45 b
INFO  12:55:32,445 - #33 ;
INFO  12:55:32,445 - #43 }
INFO  12:55:32,445 - #45 int
INFO  12:55:32,445 - #45 z
INFO  12:55:32,445 - #35 ,
INFO  12:55:32,445 - #45 y
INFO  12:55:32,445 - #39 [
INFO  12:55:32,445 - #40 ]
INFO  12:55:32,445 - #33 ;
INFO  12:55:32,446 - #6 const
INFO  12:55:32,446 - #45 bool
INFO  12:55:32,446 - #45 y
INFO  12:55:32,446 - #30 =
INFO  12:55:32,446 - #47 true
INFO  12:55:32,446 - #33 ;
INFO  12:55:32,447 - #42 {
INFO  12:55:32,448 - #45 int
INFO  12:55:32,449 - #45 fun
INFO  12:55:32,449 - #37 (
INFO  12:55:32,449 - #45 int
INFO  12:55:32,449 - #45 x
INFO  12:55:32,449 - #39 [
INFO  12:55:32,449 - #40 ]
INFO  12:55:32,449 - #39 [
INFO  12:55:32,449 - #40 ]
INFO  12:55:32,449 - #38 )
INFO  12:55:32,449 - #42 {
INFO  12:55:32,449 - #12 return
INFO  12:55:32,449 - #45 z
INFO  12:55:32,449 - #33 ;
INFO  12:55:32,449 - #43 }
INFO  12:55:32,450 - #13 void
INFO  12:55:32,450 - #45 funA
INFO  12:55:32,450 - #37 (
INFO  12:55:32,450 - #45 int
INFO  12:55:32,450 - #45 x
INFO  12:55:32,450 - #35 ,
INFO  12:55:32,450 - #45 char
INFO  12:55:32,450 - #45 y
INFO  12:55:32,450 - #38 )
INFO  12:55:32,451 - #45 bool
INFO  12:55:32,451 - #45 z
INFO  12:55:32,451 - #39 [
INFO  12:55:32,451 - #40 ]
INFO  12:55:32,451 - #33 ;
INFO  12:55:32,451 - #45 int
INFO  12:55:32,451 - #45 x
INFO  12:55:32,451 - #35 ,
INFO  12:55:32,451 - #45 t
INFO  12:55:32,451 - #33 ;
INFO  12:55:32,451 - #42 {
INFO  12:55:32,451 - #11 read
INFO  12:55:32,451 - #37 (
INFO  12:55:32,451 - #45 x
INFO  12:55:32,451 - #38 )
INFO  12:55:32,451 - #33 ;
INFO  12:55:32,451 - #10 print
INFO  12:55:32,451 - #37 (
INFO  12:55:32,451 - #47 true
INFO  12:55:32,451 - #35 ,
INFO  12:55:32,452 - #44 5
INFO  12:55:32,452 - #35 ,
INFO  12:55:32,453 - #44 6
INFO  12:55:32,453 - #35 ,
INFO  12:55:32,453 - #44 7
INFO  12:55:32,453 - #38 )
INFO  12:55:32,453 - #33 ;
INFO  12:55:32,453 - #45 x
INFO  12:55:32,453 - #30 =
INFO  12:55:32,453 - #47 true
INFO  12:55:32,453 - #33 ;
INFO  12:55:32,453 - #45 x
INFO  12:55:32,453 - #37 (
INFO  12:55:32,454 - #47 true
INFO  12:55:32,454 - #35 ,
INFO  12:55:32,455 - #47 false
INFO  12:55:32,455 - #38 )
INFO  12:55:32,455 - #33 ;
INFO  12:55:32,455 - #45 z
INFO  12:55:32,455 - #31 ++
INFO  12:55:32,455 - #33 ;
INFO  12:55:32,455 - #45 y
INFO  12:55:32,455 - #32 --
INFO  12:55:32,455 - #33 ;
INFO  12:55:32,456 - #39 [
INFO  12:55:32,456 - #45 x
INFO  12:55:32,456 - #35 ,
INFO  12:55:32,456 - #45 y
INFO  12:55:32,456 - #35 ,
INFO  12:55:32,456 - #45 z
INFO  12:55:32,456 - #40 ]
INFO  12:55:32,456 - #30 =
INFO  12:55:32,456 - #45 z
INFO  12:55:32,456 - #33 ;
INFO  12:55:32,456 - #8 while
INFO  12:55:32,456 - #37 (
INFO  12:55:32,456 - #45 y
INFO  12:55:32,457 - #38 )
INFO  12:55:32,457 - #42 {
INFO  12:55:32,457 - #7 if
INFO  12:55:32,457 - #37 (
INFO  12:55:32,457 - #47 true
INFO  12:55:32,457 - #28 &&
INFO  12:55:32,458 - #47 false
INFO  12:55:32,458 - #29 ||
INFO  12:55:32,458 - #47 false
INFO  12:55:32,458 - #28 &&
INFO  12:55:32,458 - #47 true
INFO  12:55:32,458 - #38 )
INFO  12:55:32,458 - #15 continue
INFO  12:55:32,458 - #33 ;
INFO  12:55:32,458 - #5 else
INFO  12:55:32,459 - #3 break
INFO  12:55:32,459 - #33 ;
INFO  12:55:32,459 - #43 }
INFO  12:55:32,459 - #7 if
INFO  12:55:32,460 - #37 (
INFO  12:55:32,460 - #45 x
INFO  12:55:32,460 - #38 )
INFO  12:55:32,460 - #42 {
INFO  12:55:32,460 - #3 break
INFO  12:55:32,460 - #33 ;
INFO  12:55:32,460 - #7 if
INFO  12:55:32,460 - #37 (
INFO  12:55:32,460 - #45 x
INFO  12:55:32,460 - #22 ==
INFO  12:55:32,460 - #45 y
INFO  12:55:32,461 - #38 )
INFO  12:55:32,461 - #12 return
INFO  12:55:32,461 - #33 ;
INFO  12:55:32,461 - #7 if
INFO  12:55:32,462 - #37 (
INFO  12:55:32,462 - #47 true
INFO  12:55:32,462 - #38 )
INFO  12:55:32,462 - #42 {
INFO  12:55:32,462 - #45 y
INFO  12:55:32,462 - #30 =
INFO  12:55:32,462 - #45 x
INFO  12:55:32,462 - #27 <=
ERROR 12:55:32,462 - 
Sintaksna greska na liniji 31
INFO  12:55:32,462 - #45 y
INFO  12:55:32,462 - #33 ;
INFO  12:55:32,462 - #7 if
INFO  12:55:32,463 - #37 (
INFO  12:55:32,463 - #47 true
ERROR 12:55:32,463 - Uspesan oporavak od greske do ";" pri dodeli vrednosti na liniji 11
INFO  12:55:32,463 - #38 )
INFO  12:55:32,463 - #11 read
INFO  12:55:32,463 - #37 (
INFO  12:55:32,463 - #45 u
INFO  12:55:32,463 - #38 )
INFO  12:55:32,463 - #33 ;
INFO  12:55:32,463 - #5 else
INFO  12:55:32,463 - #42 {
INFO  12:55:32,463 - #45 y
INFO  12:55:32,463 - #30 =
INFO  12:55:32,463 - #45 x
INFO  12:55:32,464 - #17 +
INFO  12:55:32,464 - #45 y
INFO  12:55:32,464 - #33 ;
INFO  12:55:32,465 - #43 }
INFO  12:55:32,465 - #45 x
INFO  12:55:32,465 - #30 =
INFO  12:55:32,465 - #45 y
INFO  12:55:32,465 - #36 .
INFO  12:55:32,465 - #16 map
INFO  12:55:32,465 - #37 (
INFO  12:55:32,465 - #45 z
INFO  12:55:32,465 - #41 =>
INFO  12:55:32,465 - #45 u
INFO  12:55:32,465 - #38 )
INFO  12:55:32,465 - #33 ;
INFO  12:55:32,465 - #43 }
INFO  12:55:32,465 - #43 }
INFO  12:55:32,465 - #45 int
INFO  12:55:32,465 - #45 t
ERROR 12:55:32,465 - 
Sintaksna greska na liniji 39
INFO  12:55:32,465 - #39 [
INFO  12:55:32,465 - #40 ]
INFO  12:55:32,465 - #35 ,
INFO  12:55:32,465 - #45 p
INFO  12:55:32,465 - #39 [
INFO  12:55:32,465 - #40 ]
INFO  12:55:32,465 - #33 ;
INFO  12:55:32,465 - #45 t
INFO  12:55:32,465 - #30 =
INFO  12:55:32,465 - #45 p
ERROR 12:55:32,465 - Uspesan oporavak od greske do ";" pri dodeli vrednosti na liniji 1
INFO  12:55:32,465 - #36 .
INFO  12:55:32,465 - #16 map
INFO  12:55:32,465 - #37 (
INFO  12:55:32,465 - #45 a
INFO  12:55:32,465 - #41 =>
INFO  12:55:32,465 - #44 0
INFO  12:55:32,465 - #38 )
INFO  12:55:32,465 - #33 ;
INFO  12:55:32,466 - #43 }
INFO  12:55:32,466 - #43 }
INFO  12:55:32,476 - Program(
  ProgramName(
   mojProgram
  ) [ProgramName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          NoDecl(
          ) [NoDecl]
          ClassDeclaration(
            ClassDecl(
              ClassNameNoExt(
               Klasa
              ) [ClassNameNoExt]
              ClassVarDeclarList(
                NoClassVarDeclarList(
                ) [NoClassVarDeclarList]
                ClassVarDeclar(
                  ClassVarDeclType(
                    Type(
                     int
                    ) [Type]
                  ) [ClassVarDeclType]
                  OneClassVar(
                    OneClassVariable(
                     y
                    ) [OneClassVariable]
                  ) [OneClassVar]
                ) [ClassVarDeclar]
              ) [ClassVarDeclarList]
              FunctionDeclList(
                NoFunctionDeclList(
                ) [NoFunctionDeclList]
                FuncDecl(
                  ClassMethDeclList(
                    NoClassMethDeclList(
                    ) [NoClassMethDeclList]
                    ClassMethodType(
                      Method(
                        MethDeclTypeAndName(
                          MethodType(
                            Type(
                             int
                            ) [Type]
                          ) [MethodType]
                         fun
                        ) [MethDeclTypeAndName]
                        NoFormParamsList(
                        ) [NoFormParamsList]
                        NoVarDeclarList(
                        ) [NoVarDeclarList]
                        StmtList(
                          NoStmt(
                          ) [NoStmt]
                          MatchedStm(
                            ReturnStm(
                              Expression(
                                OneTerm(
                                  OneFactor(
                                    FactNum(
                                     3
                                    ) [FactNum]
                                  ) [OneFactor]
                                ) [OneTerm]
                              ) [Expression]
                            ) [ReturnStm]
                          ) [MatchedStm]
                        ) [StmtList]
                      ) [Method]
                    ) [ClassMethodType]
                  ) [ClassMethDeclList]
                ) [FuncDecl]
              ) [FunctionDeclList]
            ) [ClassDecl]
          ) [ClassDeclaration]
        ) [DeclarationList]
        ClassDeclaration(
          ClassDecl(
            ClassNameExt(
             Klasa
              Type(
               Klasa
              ) [Type]
            ) [ClassNameExt]
            ClassVarDeclarList(
              ClassVarDeclarList(
                NoClassVarDeclarList(
                ) [NoClassVarDeclarList]
                ClassVarDeclar(
                  ClassVarDeclType(
                    Type(
                     int
                    ) [Type]
                  ) [ClassVarDeclType]
                  OneClassVar(
                    MatrixClassVariable(
                     y
                    ) [MatrixClassVariable]
                  ) [OneClassVar]
                ) [ClassVarDeclar]
              ) [ClassVarDeclarList]
              ClassVarDeclar(
                ClassVarDeclType(
                  Type(
                   char
                  ) [Type]
                ) [ClassVarDeclType]
                OneClassVar(
                  OneClassVariable(
                   b
                  ) [OneClassVariable]
                ) [OneClassVar]
              ) [ClassVarDeclar]
            ) [ClassVarDeclarList]
            NoFunctionDeclList(
            ) [NoFunctionDeclList]
          ) [ClassDecl]
        ) [ClassDeclaration]
      ) [DeclarationList]
      VarDeclaration(
        VarDeclar(
          Type(
           int
          ) [Type]
          Vars(
            OneVar(
              OneVariable(
               z
              ) [OneVariable]
            ) [OneVar]
            ArrayVariable(
             y
            ) [ArrayVariable]
          ) [Vars]
        ) [VarDeclar]
      ) [VarDeclaration]
    ) [DeclarationList]
    ConstDeclaration(
      ConstDecl(
        Type(
         bool
        ) [Type]
        SingleConstDecl(
         y
          BoolConstant(
           true
          ) [BoolConstant]
        ) [SingleConstDecl]
        NoConstDeclarList(
        ) [NoConstDeclarList]
      ) [ConstDecl]
    ) [ConstDeclaration]
  ) [DeclarationList]
  MethDeclList(
    MethDeclList(
      NoMethDeclList(
      ) [NoMethDeclList]
      Method(
        MethDeclTypeAndName(
          MethodType(
            Type(
             int
            ) [Type]
          ) [MethodType]
         fun
        ) [MethDeclTypeAndName]
        FormParamsList(
          NoFormParamsList(
          ) [NoFormParamsList]
          FormParam(
            FormParameterMatrix(
              Type(
               int
              ) [Type]
             x
            ) [FormParameterMatrix]
          ) [FormParam]
        ) [FormParamsList]
        NoVarDeclarList(
        ) [NoVarDeclarList]
        StmtList(
          NoStmt(
          ) [NoStmt]
          MatchedStm(
            ReturnStm(
              Expression(
                OneTerm(
                  OneFactor(
                    FactDesign(
                      Design(
                       z
                      ) [Design]
                    ) [FactDesign]
                  ) [OneFactor]
                ) [OneTerm]
              ) [Expression]
            ) [ReturnStm]
          ) [MatchedStm]
        ) [StmtList]
      ) [Method]
    ) [MethDeclList]
    Method(
      MethDeclTypeAndName(
        MethodVoid(
        ) [MethodVoid]
       funA
      ) [MethDeclTypeAndName]
      FormParamsList(
        NoFormParamsList(
        ) [NoFormParamsList]
        FormParams(
          FormParam(
            FormParameter(
              Type(
               int
              ) [Type]
             x
            ) [FormParameter]
          ) [FormParam]
          FormParameter(
            Type(
             char
            ) [Type]
           y
          ) [FormParameter]
        ) [FormParams]
      ) [FormParamsList]
      VarDeclarList(
        VarDeclarList(
          NoVarDeclarList(
          ) [NoVarDeclarList]
          VarDeclar(
            Type(
             bool
            ) [Type]
            OneVar(
              ArrayVariable(
               z
              ) [ArrayVariable]
            ) [OneVar]
          ) [VarDeclar]
        ) [VarDeclarList]
        VarDeclar(
          Type(
           int
          ) [Type]
          Vars(
            OneVar(
              OneVariable(
               x
              ) [OneVariable]
            ) [OneVar]
            OneVariable(
             t
            ) [OneVariable]
          ) [Vars]
        ) [VarDeclar]
      ) [VarDeclarList]
      StmtList(
        StmtList(
          StmtList(
            StmtList(
              StmtList(
                StmtList(
                  StmtList(
                    StmtList(
                      StmtList(
                        StmtList(
                          StmtList(
                            NoStmt(
                            ) [NoStmt]
                            MatchedStm(
                              ReadStm(
                                Design(
                                 x
                                ) [Design]
                              ) [ReadStm]
                            ) [MatchedStm]
                          ) [StmtList]
                          MatchedStm(
                            PrintStm(
                              Expression(
                                OneTerm(
                                  OneFactor(
                                    FactBool(
                                     true
                                    ) [FactBool]
                                  ) [OneFactor]
                                ) [OneTerm]
                              ) [Expression]
                              NumConstantList(
                                NumConstantList(
                                  NumConstantList(
                                    NoNumConstantList(
                                    ) [NoNumConstantList]
                                    NumConst(
                                     5
                                    ) [NumConst]
                                  ) [NumConstantList]
                                  NumConst(
                                   6
                                  ) [NumConst]
                                ) [NumConstantList]
                                NumConst(
                                 7
                                ) [NumConst]
                              ) [NumConstantList]
                            ) [PrintStm]
                          ) [MatchedStm]
                        ) [StmtList]
                        MatchedStm(
                          DesignStm(
                            DesignAssign(
                              Design(
                               x
                              ) [Design]
                              Expression(
                                OneTerm(
                                  OneFactor(
                                    FactBool(
                                     true
                                    ) [FactBool]
                                  ) [OneFactor]
                                ) [OneTerm]
                              ) [Expression]
                            ) [DesignAssign]
                          ) [DesignStm]
                        ) [MatchedStm]
                      ) [StmtList]
                      MatchedStm(
                        DesignStm(
                          DesignFuncCall(
                            Design(
                             x
                            ) [Design]
                            FunctionCalled(
                            ) [FunctionCalled]
                            ActParamsList(
                              ActParams(
                                ActParam(
                                  ActPar(
                                    Expression(
                                      OneTerm(
                                        OneFactor(
                                          FactBool(
                                           true
                                          ) [FactBool]
                                        ) [OneFactor]
                                      ) [OneTerm]
                                    ) [Expression]
                                  ) [ActPar]
                                ) [ActParam]
                                ActPar(
                                  Expression(
                                    OneTerm(
                                      OneFactor(
                                        FactBool(
                                         false
                                        ) [FactBool]
                                      ) [OneFactor]
                                    ) [OneTerm]
                                  ) [Expression]
                                ) [ActPar]
                              ) [ActParams]
                            ) [ActParamsList]
                          ) [DesignFuncCall]
                        ) [DesignStm]
                      ) [MatchedStm]
                    ) [StmtList]
                    MatchedStm(
                      DesignStm(
                        DesignInc(
                          Design(
                           z
                          ) [Design]
                        ) [DesignInc]
                      ) [DesignStm]
                    ) [MatchedStm]
                  ) [StmtList]
                  MatchedStm(
                    DesignStm(
                      DesignDec(
                        Design(
                         y
                        ) [Design]
                      ) [DesignDec]
                    ) [DesignStm]
                  ) [MatchedStm]
                ) [StmtList]
                MatchedStm(
                  DesignStm(
                    DesignArrAsign(
                      DesignList(
                        DesignList(
                          DesignOrNothing(
                            DesignatorInList(
                              Design(
                               x
                              ) [Design]
                            ) [DesignatorInList]
                          ) [DesignOrNothing]
                          DesignatorInList(
                            Design(
                             y
                            ) [Design]
                          ) [DesignatorInList]
                        ) [DesignList]
                        DesignatorInList(
                          Design(
                           z
                          ) [Design]
                        ) [DesignatorInList]
                      ) [DesignList]
                      Design(
                       z
                      ) [Design]
                    ) [DesignArrAsign]
                  ) [DesignStm]
                ) [MatchedStm]
              ) [StmtList]
              MatchedStm(
                WhileStm(
                  WhileCond(
                    OneCondition(
                      OneCondTerm(
                        OneCondFact(
                          Expression(
                            OneTerm(
                              OneFactor(
                                FactDesign(
                                  Design(
                                   y
                                  ) [Design]
                                ) [FactDesign]
                              ) [OneFactor]
                            ) [OneTerm]
                          ) [Expression]
                        ) [OneCondFact]
                      ) [OneCondTerm]
                    ) [OneCondition]
                  ) [WhileCond]
                  MatchedStm(
                    Stm(
                      StmtList(
                        NoStmt(
                        ) [NoStmt]
                        MatchedStm(
                          MatchedIfElseStatement(
                            IfCond(
                              Conditions(
                                OneCondition(
                                  CondTerms(
                                    OneCondTerm(
                                      OneCondFact(
                                        Expression(
                                          OneTerm(
                                            OneFactor(
                                              FactBool(
                                               true
                                              ) [FactBool]
                                            ) [OneFactor]
                                          ) [OneTerm]
                                        ) [Expression]
                                      ) [OneCondFact]
                                    ) [OneCondTerm]
                                    OneCondFact(
                                      Expression(
                                        OneTerm(
                                          OneFactor(
                                            FactBool(
                                             false
                                            ) [FactBool]
                                          ) [OneFactor]
                                        ) [OneTerm]
                                      ) [Expression]
                                    ) [OneCondFact]
                                  ) [CondTerms]
                                ) [OneCondition]
                                CondTerms(
                                  OneCondTerm(
                                    OneCondFact(
                                      Expression(
                                        OneTerm(
                                          OneFactor(
                                            FactBool(
                                             false
                                            ) [FactBool]
                                          ) [OneFactor]
                                        ) [OneTerm]
                                      ) [Expression]
                                    ) [OneCondFact]
                                  ) [OneCondTerm]
                                  OneCondFact(
                                    Expression(
                                      OneTerm(
                                        OneFactor(
                                          FactBool(
                                           true
                                          ) [FactBool]
                                        ) [OneFactor]
                                      ) [OneTerm]
                                    ) [Expression]
                                  ) [OneCondFact]
                                ) [CondTerms]
                              ) [Conditions]
                            ) [IfCond]
                            ContinueStm(
                            ) [ContinueStm]
                            BreakStm(
                            ) [BreakStm]
                          ) [MatchedIfElseStatement]
                        ) [MatchedStm]
                      ) [StmtList]
                    ) [Stm]
                  ) [MatchedStm]
                  WhileLoopEnd(
                  ) [WhileLoopEnd]
                ) [WhileStm]
              ) [MatchedStm]
            ) [StmtList]
            UnmatchedStm(
              UnmatchedIf(
                IfCond(
                  OneCondition(
                    OneCondTerm(
                      OneCondFact(
                        Expression(
                          OneTerm(
                            OneFactor(
                              FactDesign(
                                Design(
                                 x
                                ) [Design]
                              ) [FactDesign]
                            ) [OneFactor]
                          ) [OneTerm]
                        ) [Expression]
                      ) [OneCondFact]
                    ) [OneCondTerm]
                  ) [OneCondition]
                ) [IfCond]
                MatchedStm(
                  Stm(
                    StmtList(
                      StmtList(
                        StmtList(
                          NoStmt(
                          ) [NoStmt]
                          MatchedStm(
                            BreakStm(
                            ) [BreakStm]
                          ) [MatchedStm]
                        ) [StmtList]
                        UnmatchedStm(
                          UnmatchedIf(
                            IfCond(
                              OneCondition(
                                OneCondTerm(
                                  CondFacts(
                                    Expression(
                                      OneTerm(
                                        OneFactor(
                                          FactDesign(
                                            Design(
                                             x
                                            ) [Design]
                                          ) [FactDesign]
                                        ) [OneFactor]
                                      ) [OneTerm]
                                    ) [Expression]
                                    EqualTo(
                                    ) [EqualTo]
                                    Expression(
                                      OneTerm(
                                        OneFactor(
                                          FactDesign(
                                            Design(
                                             y
                                            ) [Design]
                                          ) [FactDesign]
                                        ) [OneFactor]
                                      ) [OneTerm]
                                    ) [Expression]
                                  ) [CondFacts]
                                ) [OneCondTerm]
                              ) [OneCondition]
                            ) [IfCond]
                            MatchedStm(
                              NoReturnValueStm(
                              ) [NoReturnValueStm]
                            ) [MatchedStm]
                          ) [UnmatchedIf]
                        ) [UnmatchedStm]
                      ) [StmtList]
                      UnmatchedStm(
                        UnmatchedIf(
                          IfCond(
                            OneCondition(
                              OneCondTerm(
                                OneCondFact(
                                  Expression(
                                    OneTerm(
                                      OneFactor(
                                        FactBool(
                                         true
                                        ) [FactBool]
                                      ) [OneFactor]
                                    ) [OneTerm]
                                  ) [Expression]
                                ) [OneCondFact]
                              ) [OneCondTerm]
                            ) [OneCondition]
                          ) [IfCond]
                          MatchedStm(
                            Stm(
                              StmtList(
                                StmtList(
                                  StmtList(
                                    NoStmt(
                                    ) [NoStmt]
                                    MatchedStm(
                                      DesignStm(
                                        ErrAssignment(
                                        ) [ErrAssignment]
                                      ) [DesignStm]
                                    ) [MatchedStm]
                                  ) [StmtList]
                                  MatchedStm(
                                    MatchedIfElseStatement(
                                      IfCond(
                                        OneCondition(
                                          OneCondTerm(
                                            OneCondFact(
                                              Expression(
                                                OneTerm(
                                                  OneFactor(
                                                    FactBool(
                                                     true
                                                    ) [FactBool]
                                                  ) [OneFactor]
                                                ) [OneTerm]
                                              ) [Expression]
                                            ) [OneCondFact]
                                          ) [OneCondTerm]
                                        ) [OneCondition]
                                      ) [IfCond]
                                      ReadStm(
                                        Design(
                                         u
                                        ) [Design]
                                      ) [ReadStm]
                                      Stm(
                                        StmtList(
                                          NoStmt(
                                          ) [NoStmt]
                                          MatchedStm(
                                            DesignStm(
                                              DesignAssign(
                                                Design(
                                                 y
                                                ) [Design]
                                                Expression(
                                                  PlusTerm(
                                                    OneTerm(
                                                      OneFactor(
                                                        FactDesign(
                                                          Design(
                                                           x
                                                          ) [Design]
                                                        ) [FactDesign]
                                                      ) [OneFactor]
                                                    ) [OneTerm]
                                                    Plus(
                                                    ) [Plus]
                                                    OneFactor(
                                                      FactDesign(
                                                        Design(
                                                         y
                                                        ) [Design]
                                                      ) [FactDesign]
                                                    ) [OneFactor]
                                                  ) [PlusTerm]
                                                ) [Expression]
                                              ) [DesignAssign]
                                            ) [DesignStm]
                                          ) [MatchedStm]
                                        ) [StmtList]
                                      ) [Stm]
                                    ) [MatchedIfElseStatement]
                                  ) [MatchedStm]
                                ) [StmtList]
                                MatchedStm(
                                  MapStm(
                                    Design(
                                     x
                                    ) [Design]
                                    Design(
                                     y
                                    ) [Design]
                                   z
                                    Expression(
                                      OneTerm(
                                        OneFactor(
                                          FactDesign(
                                            Design(
                                             u
                                            ) [Design]
                                          ) [FactDesign]
                                        ) [OneFactor]
                                      ) [OneTerm]
                                    ) [Expression]
                                  ) [MapStm]
                                ) [MatchedStm]
                              ) [StmtList]
                            ) [Stm]
                          ) [MatchedStm]
                        ) [UnmatchedIf]
                      ) [UnmatchedStm]
                    ) [StmtList]
                  ) [Stm]
                ) [MatchedStm]
              ) [UnmatchedIf]
            ) [UnmatchedStm]
          ) [StmtList]
          MatchedStm(
            DesignStm(
              ErrAssignment(
              ) [ErrAssignment]
            ) [DesignStm]
          ) [MatchedStm]
        ) [StmtList]
        MatchedStm(
          MapStm(
            Design(
             t
            ) [Design]
            Design(
             p
            ) [Design]
           a
            Expression(
              OneTerm(
                OneFactor(
                  FactNum(
                   0
                  ) [FactNum]
                ) [OneFactor]
              ) [OneTerm]
            ) [Expression]
          ) [MapStm]
        ) [MatchedStm]
      ) [StmtList]
    ) [Method]
  ) [MethDeclList]
) [Program]
INFO  12:55:32,476 - ===================================
INFO  12:55:32,481 - Obradjuje se klasa Klasa na liniji 2
INFO  12:55:32,481 - Definisana je promenljiva y na liniji 3
INFO  12:55:32,481 - Obradjuje se funkcija fun na liniji 5
ERROR 12:55:32,481 - Semanticka greska na liniji 8: klasa sa imenom Klasa vec postoji
INFO  12:55:32,481 - Definisana je matrica y na liniji 8
INFO  12:55:32,481 - Definisana je promenljiva b na liniji 8
INFO  12:55:32,482 - Definisana je promenljiva z na liniji 9
INFO  12:55:32,482 - Definisan je niz y na liniji 9
ERROR 12:55:32,482 - Semanticka greska na liniji 10: konstanta sa imenom y vec postoji
INFO  12:55:32,482 - Obradjuje se funkcija fun na liniji 12
INFO  12:55:32,482 - Definisan je formalni argument x na liniji 12
INFO  12:55:32,482 - Pristup promenljivoj z na liniji 12
INFO  12:55:32,482 - Obradjuje se funkcija funA na liniji 13
INFO  12:55:32,482 - Definisan je formalni argument x na liniji 13
ERROR 12:55:32,482 - Semanticka greska na liniji 13: argument sa imenom y vec postoji
ERROR 12:55:32,482 - Semanticka greska na liniji 14: promenljiva sa imenom z vec postoji
ERROR 12:55:32,482 - Semanticka greska na liniji 14: promenljiva sa imenom x vec postoji
INFO  12:55:32,482 - Definisana je promenljiva t na liniji 14
INFO  12:55:32,482 - Pristup promenljivoj x na liniji 16
INFO  12:55:32,482 - Pristup promenljivoj x na liniji 18
ERROR 12:55:32,482 - Semanticka greska na liniji 18: tipovi moraju biti kompatibilni.
INFO  12:55:32,482 - Pristup promenljivoj x na liniji 19
ERROR 12:55:32,483 - Semanticka greska na liniji 19: x mora biti globalna funkcija ili metoda klase.
INFO  12:55:32,483 - Pristup promenljivoj z na liniji 20
INFO  12:55:32,483 - Pristup promenljivoj y na liniji 21
ERROR 12:55:32,483 - Semanticka greska na liniji 21: y mora biti tipa int.
INFO  12:55:32,483 - Pristup promenljivoj x na liniji 22
INFO  12:55:32,483 - Pristup promenljivoj y na liniji 22
INFO  12:55:32,483 - Pristup promenljivoj z na liniji 22
INFO  12:55:32,483 - Pristup promenljivoj z na liniji 22
ERROR 12:55:32,483 - Semanticka greska na liniji 22: z mora biti niz.
INFO  12:55:32,483 - Pristup promenljivoj y na liniji 23
ERROR 12:55:32,483 - Greska na liniji 23 : tip uslova mora biti BOOL!
INFO  12:55:32,483 - Pristup promenljivoj x na liniji 27
ERROR 12:55:32,483 - Greska na liniji 27 : tip uslova mora biti BOOL!
ERROR 12:55:32,483 - Greska na liniji 0 : naredba break moze da se nadje samo u okviru while petlje
INFO  12:55:32,483 - Pristup promenljivoj x na liniji 29
INFO  12:55:32,483 - Pristup promenljivoj y na liniji 29
ERROR 12:55:32,483 - Semanticka greska na liniji 29: tipovi promenljivih moraju biti kompatibilni.
ERROR 12:55:32,483 - Greska na liniji 29 : tip uslova mora biti BOOL!
ERROR 12:55:32,483 - Semanticka greska na liniji 32: promenljiva u ne postoji
INFO  12:55:32,483 - Pristup promenljivoj u na liniji 32
ERROR 12:55:32,483 - Semanticka greska na liniji 32: noObj mora biti tipa int, char ili bool.
INFO  12:55:32,483 - Pristup promenljivoj y na liniji 34
INFO  12:55:32,483 - Pristup promenljivoj x na liniji 34
INFO  12:55:32,483 - Pristup promenljivoj y na liniji 34
ERROR 12:55:32,483 - Semanticka greska na liniji 34: tipovi moraju biti kompatibilni.
INFO  12:55:32,483 - Pristup promenljivoj x na liniji 36
INFO  12:55:32,484 - Pristup promenljivoj y na liniji 36
ERROR 12:55:32,484 - Semanticka greska na liniji 36: promenljiva u ne postoji
INFO  12:55:32,484 - Pristup promenljivoj u na liniji 36
ERROR 12:55:32,484 - Semanticka greska na liniji 36: z mora biti istog tipa kao i elementi niza.
INFO  12:55:32,484 - Pristup promenljivoj t na liniji 40
ERROR 12:55:32,484 - Semanticka greska na liniji 40: promenljiva p ne postoji
INFO  12:55:32,484 - Pristup promenljivoj p na liniji 40
ERROR 12:55:32,484 - Semanticka greska na liniji 40: promenljiva sa desne strane jednakosti mora biti niz.
ERROR 12:55:32,484 - Semanticka greska na liniji 13: funkcija funA nema return iskaz!
ERROR 12:55:32,484 - Metoda main mora postojati kao globalna void funkcija, bez argumenata. na liniji 1
INFO  12:55:32,484 - ===================================
ERROR 12:55:32,484 - Parsiranje NIJE uspesno zavrseno!
